<?php
// NrgHomeVis - Energievisualisierung für zu Hause | Repository: <https://github.com/SvenoF54/home-energy-visualizer>
// Licensed under the GNU GPL v3.0 - see <https://www.gnu.org/licenses/gpl-3.0.en.html>

// Diese Datei enthält lokale Konfigurationseinstellungen
// Es muss eine Datei mit dem Namen local-config.php und den korrekten Werten erstellt werden.

///-----------------------------------------------------------------------
///Diese Werten werden benötigt.
///-----------------------------------------------------------------------

define('DB_NAME', 'mein-db-name');
define('DB_USER', 'mein-db-user');
define('DB_PASSWORD', 'mein-password');
define('DB_HOST', 'mein-host');

define('URL_PREFIX', 'http://meine.domain/mein-pfad/');  // Hinweis, am Ende muss ein Slash '/' stehen.
define('API_KEY', '987654321');
define('SYSTEM_EMAIL', 'mail@example.org');  // Mailempfänger für Systemnachrichten

///-----------------------------------------------------------------------
///Alle nun kommenen Werte sind optional
///-----------------------------------------------------------------------

$config = Configuration::getInstance();

// Konfiguriert, den Alarmstatus, falls keine Daten geloggt werden.
$config->realtimeAlert()->setSendAlertMail(true);
$config->realtimeAlert()->setAlertThresholdInMinutes(5);      // Wenn x Minuten keine Einträge gefunden werden, wird ein Mail und ein Hinweis in der Navigation gezeigt, solange das Problem besteht.
$config->realtimeAlert()->setSendAlertMailEveryXMinutes(30);  // Die Mail wird alle x Minuten erneut gesendet, solange das Problem besteht.
$config->realtimeAlert()->setShouldAlertForEnergyType(EnergyTypeEnum::EM, true);  // Welche Kanäle überwacht werden
$config->realtimeAlert()->setShouldAlertForEnergyType(EnergyTypeEnum::PM1, true);
$config->realtimeAlert()->setShouldAlertForEnergyType(EnergyTypeEnum::PM3, true);

// Konfiguriert einige Werte auf der Energy-Chart-Seite
// Es gibt jeweils 2 Energiesets, welche Energie1 und Energie2 heißen und einzeln konfiguriert werden können.
// Die Konfiguration beeinflust das Verhalten beim ersten Aufruf der Seite.
// Es gibt folgende Übersichtsseiten. 
$config->hoursOverview()->configEnergy1()->setChartShowEnergyOverZeroPlusSavings(false);  // Auf der Stundenübersicht wird bei Aufruf die Erzeugungsenergie nicht über den Verbrauch gezeigt.
$config->daysOverview()->configEnergy1()->setChartShowEnergyOverZeroPlusSavings(false);  
$config->monthsOverview()->configEnergy1()->setChartShowEnergyOverZeroPlusSavings(false);  
$config->yearsOverview()->configEnergy1()->setChartShowEnergyOverZeroPlusSavings(false);  

$config->hoursOverview()->configEnergy2()->setChartShowEnergyOverZero(false);  
$config->hoursOverview()->configEnergy2()->setChartShowSavings(false);  
$config->hoursOverview()->configEnergy2()->setChartShowFeedIn(false);  

// Zeige Werte der 2. Selection auf der AutarkyChart-Übersichtsseite
$config->hoursOverview()->configEnergy2()->setChartShowAutarkyAndSelfConsumptionRate(true, false);  
$config->daysOverview()->configEnergy2()->setChartShowAutarkyAndSelfConsumptionRate(true, false);
$config->monthsOverview()->configEnergy2()->setChartShowAutarkyAndSelfConsumptionRate(true, false);

// Anzahl Zeilen auf der Energy-Tabellenübersicht
$config->hoursOverview()->configEnergy1()->setTablePageLength(10);  
$config->daysOverview()->configEnergy1()->setTablePageLength(10);
$config->monthsOverview()->configEnergy1()->setTablePageLength(25);

// Für jede Übersichtsseite sind folgende Werte konfigurierbar
// Generelles Ansichtsverhalten beim ersten Aufruf der Seite
$config->hoursOverview()->setChartOrTableView(ChartOrTableViewEnum::EnergyChart); // Folgende Werte sind möglich: ChartOrTableViewEnum::EnergyChart, ChartOrTableViewEnum::AutarkyChart, ChartOrTableViewEnum::EnergyTable
$config->hoursOverview()->setLine1(100);
$config->hoursOverview()->setLine2(-100);
$config->hoursOverview()->setLinePossibilities([-1000, -750, -500, -250, 0, 250, 500, 750, 1000, 1250]);
$config->yearsOverview()->setChartOrTableView(ChartOrTableViewEnum::EnergyTable); // Folgende Werte sind möglich: ChartOrTableViewEnum::EnergyChart, ChartOrTableViewEnum::AutarkyChart, ChartOrTableViewEnum::EnergyTable

// Energy-Chart
// Welche Chart-Linien beim ersten Aufruf der Seite gezeigt werden
$config->hoursOverview()->configEnergy1()->setChartShowEnergyOverZero(true);
$config->hoursOverview()->configEnergy1()->setChartShowEnergyOverZeroPlusSavings(true);
$config->hoursOverview()->configEnergy1()->setChartShowFeedIn(true);
$config->hoursOverview()->configEnergy1()->setChartShowSavings(true);

// Autarky-Chart
$config->hoursOverview()->configEnergy1()->setChartShowAutarkyAndSelfConsumptionRate(true, false);

// Energy-Table
$config->hoursOverview()->configEnergy1()->setTableShowProductionInTotal(true);
$config->hoursOverview()->configEnergy1()->setTablePageLength(10);

// Die Echtzeitübersichtsseite hat zusätzlich folgende Optionen, es sind nicht alle Optionen der Übersichtsseite benutzbar
$config->realtimeOverview()->setPastPeriodPossibilities([0.5, 1, 2, 4, 6, 8, 12, 24, 24*7, 24*14, 24*28]);
$config->realtimeOverview()->setRefreshIntervalInSec(5);

// Zendure
$config->zendure()->setAppKey("DeinAppKey");                            // Der AppKey, siehe Installationsanleitung
$config->zendure()->setAppSecret("DeinAppSecret");                      // Das AppSecret, siehe Installationsanleitung
$config->zendure()->setReadTimeInSec(60);                               // Wie lange ein Request die Zendure Nachrichten abfragt, hängt vom Timeout des Webservers ab.
$config->zendure()->setDisplayName("Akku");                             // Name auf dem Dashboard
$config->zendure()->setConnectedToPmPort("PM3");                        // An welcher Phase der Zendure angeschlossen ist. Kann auch in der Echtzeitübersicht erkannt werden
$config->zendure()->setCalculatePackData(true);                         // Wenn Zendure im Smart Mode, also mit Nulleinspeisung betrieben wird, bekommt man schnellere ungefähr Werte, wenn der Akku berechnet wird.

$config->dashboardPage()->setShowZendureOnDashboard(false);             // Falls ein Zendure-System benutzt wird, das die Werte auf dem Dashboard angezeigt werden
$config->dashboardPage()->setConsumptionIndicatedAs100Percent(6000);  	// Max. Wert für 100% Hausverbrauch, z.B. 6000W
$config->dashboardPage()->setMaxEnergyProduction(1600);					// Max. Wert für Energieproduktion, z.B. 1600W PV-Panel Leistung

?>
